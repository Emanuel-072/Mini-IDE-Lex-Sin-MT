
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONASIGNACION CADENA DIVISION IDENTIFICADOR MULTIPLICACION NUMERO PARENTESIS_DER PARENTESIS_IZQ RESTA SUMA\nstatement : asignacion\n         | expresion\n\nasignacion : IDENTIFICADOR ASIGNACION expresion\n\nexpresion : expresion SUMA expresion\n         | expresion RESTA expresion\n         | expresion MULTIPLICACION expresion\n         | expresion DIVISION expresion\n\nexpresion : PARENTESIS_IZQ expresion PARENTESIS_DER\n\nexpresion : NUMERO\n\nexpresion : CADENA\n\nexpresion : IDENTIFICADOR\n'
    
_lr_action_items = {'IDENTIFICADOR':([0,5,8,9,10,11,12,],[4,14,14,14,14,14,14,]),'PARENTESIS_IZQ':([0,5,8,9,10,11,12,],[5,5,5,5,5,5,5,]),'NUMERO':([0,5,8,9,10,11,12,],[6,6,6,6,6,6,6,]),'CADENA':([0,5,8,9,10,11,12,],[7,7,7,7,7,7,7,]),'$end':([1,2,3,4,6,7,14,15,16,17,18,19,20,],[0,-1,-2,-11,-9,-10,-11,-4,-5,-6,-7,-3,-8,]),'SUMA':([3,4,6,7,13,14,15,16,17,18,19,20,],[8,-11,-9,-10,8,-11,-4,-5,-6,-7,8,-8,]),'RESTA':([3,4,6,7,13,14,15,16,17,18,19,20,],[9,-11,-9,-10,9,-11,-4,-5,-6,-7,9,-8,]),'MULTIPLICACION':([3,4,6,7,13,14,15,16,17,18,19,20,],[10,-11,-9,-10,10,-11,10,10,-6,-7,10,-8,]),'DIVISION':([3,4,6,7,13,14,15,16,17,18,19,20,],[11,-11,-9,-10,11,-11,11,11,-6,-7,11,-8,]),'ASIGNACION':([4,],[12,]),'PARENTESIS_DER':([6,7,13,14,15,16,17,18,20,],[-9,-10,20,-11,-4,-5,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'asignacion':([0,],[2,]),'expresion':([0,5,8,9,10,11,12,],[3,13,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> asignacion','statement',1,'p_statement','parser.py',35),
  ('statement -> expresion','statement',1,'p_statement','parser.py',36),
  ('asignacion -> IDENTIFICADOR ASIGNACION expresion','asignacion',3,'p_asignacion','parser.py',42),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binop','parser.py',52),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binop','parser.py',53),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binop','parser.py',54),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binop','parser.py',55),
  ('expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',3,'p_expresion_group','parser.py',66),
  ('expresion -> NUMERO','expresion',1,'p_expresion_numero','parser.py',75),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',84),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_id','parser.py',93),
]
